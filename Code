package tiles;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import static java.lang.Thread.sleep;

/**
 *
 * @author jonat
 */
public class TILES {

    /**
     * @param args the command line arguments
     */
    static int numOfTiles = 8;
    static JFrame myFrame = new JFrame("Jonathan's World");
    
    static int randomColor(){  
   return (int)(Math.random() * 256);
}   
 
    public static void main(String[] args) {
          
        myFrame.setSize(400,400);
        myFrame.setResizable(true);
        myFrame.setVisible(true);
        myFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        JPanel mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayout(4,2));
        mainThread mainT = new mainThread();
        for(int i = 0; i < numOfTiles; i++){
            pressed aButton = new pressed("Button " + (i + 1));
            aButton.addActionListener(new ButtonPress());
            aButton.setBackground( new Color(randomColor(),randomColor(),randomColor()));
            mainPanel.add(aButton);
            mainT.addAnotherButton(aButton);
      
           }
        
        myFrame.getContentPane().add(mainPanel);
        
        mainT.start();
        
         
    }  
     static class ButtonPress implements ActionListener{
        @Override
    public void actionPerformed(ActionEvent ae){
       pressed button = (pressed) ae.getSource();
        button.reverse();
    } 
    }
    
   static class mainThread extends Thread{
            
         pressed[] buttons = new pressed[numOfTiles];
         int i = 0;
          public void addAnotherButton(pressed anotherButton){
            buttons[i]=anotherButton;
            i++;
    }
         
        @Override
        public void run(){
        try{
           
                for(;;){
            for (int i=0; i< numOfTiles; i++){
                if(buttons[i].isItPressed() == true){
                    continue;
                }
              buttons[i].setBackground(new Color(randomColor(),randomColor(),randomColor()));
              sleep(1000);
            
        
                }
    
        }
        }
          catch(InterruptedException exeption){}
          }
       } 
}

    class pressed extends JButton{
       public pressed (String buttonName){
          super(buttonName);
       }
        boolean pressed = false;
        
          
        
        boolean isItPressed(){
            return pressed;
        }
        void reverse(){
            
            if(pressed){
                pressed = false;
            }
            else{
                pressed = true;
        }
            }
            
        }
    
